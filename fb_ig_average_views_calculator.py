# -*- coding: utf-8 -*-
"""FB_IG_Average Views Calculator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11wdivzeaGfl5GxnUmD2sxB6baYr2NHVo
"""

import pandas as pd
from datetime import datetime
from google.colab import files

# 上傳報表
uploaded = files.upload()
uploaded_filename = list(uploaded.keys())[0]

# 定義分析函式（整合 IG + FB）
def analisar_rede_social_auto(csv_path, data_inicio, data_fim):
    df = pd.read_csv(csv_path)

    # 轉換時間格式
    df["Publish time"] = pd.to_datetime(df["Publish time"], errors="coerce")
    data_inicio = pd.to_datetime(data_inicio)
    data_fim = pd.to_datetime(data_fim)
    df = df[(df["Publish time"] >= data_inicio) & (df["Publish time"] <= data_fim)]

    # 自動判斷平台
    if "Page name" in df.columns and "Permalink" in df.columns:
        plataforma = "facebook"
        df["Tipo"] = df["Permalink"].apply(
            lambda x: "Reel" if "/reel/" in str(x) else "Video" if "/videos/" in str(x) else "Outro"
        )
    elif "Account name" in df.columns and "Post type" in df.columns:
        plataforma = "instagram"
        df["Tipo"] = df["Post type"].apply(
            lambda x: "Reel" if str(x).strip().lower() == "ig reel" else "Outro"
        )
    else:
        raise ValueError("無法判斷平台：缺少必要欄位")

    # 篩選影片貼文
    df = df[df["Tipo"] == "Reel"]

    # Views 欄檢查與轉型
    if "Views" not in df.columns:
        raise ValueError("缺少 'Views' 欄位")

    df = df[pd.to_numeric(df["Views"], errors="coerce").notna()]
    df["Views"] = df["Views"].astype(float)

    total_views = df["Views"].sum()
    num_posts = df.shape[0]
    avg_views = total_views / num_posts if num_posts > 0 else 0

    return {
        "平台": plataforma.capitalize(),
        "分析區間": f"{data_inicio.date()} 到 {data_fim.date()}",
        "影片數量（Reels）": num_posts,
        "總觀看數": int(total_views),
        "平均觀看數": round(avg_views, 2)
    }

# ▶️ 執行分析（需改日期）
resultado = analisar_rede_social_auto(
    uploaded_filename,
    "2025-06-26",  # 起始日期
    "2025-07-23"   # 結束日期
)

print("分析結果")
for chave, valor in resultado.items():
    print(f"{chave}: {valor}")